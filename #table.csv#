	,<var>,<val>,{,},[,],"""+""","""-""","""*""","""/""",:,<,>,"""==""",""">=""","""<=""",",",args,if,while,and,or,not,return,function,then,else,none,$
SC,,,SC->{BODY},,,,,,,,,,,,,,,,,,,,,,,,,,
BODY,BODY->ASSIGNMENT_FUNCALL BODY_COMMA,,,,,,,,,,,,,,,,,,BODY->IF BODY_COMMA,BODY->WHILE BODY_COMMA,,,,,BODY->FUN BODY_COMMA,,,,
BODY_COMMA,,,,BODY_COMMA->e,,,,,,,,,,,,,"BODY_COMMA->,",,,,,,,,,,,,
ASSIGNMENT_FUNCALL,ASSIGNMENT_FUNCALL->VAR_LEFT VAR_RIGHT,,,,,,,,,,,,,,,,,,,,,,,,,,,,
VAR_LEFT,VAR_LEFT-><var>:,,,,,,,,,,,,,,,,,,,,,,,,,,,,
VAR_RIGHT,VAR_RIGHT-><var>,VAR_RIGHT-><val>,VAR_RIGHT->EXP,VAR_RIGHT->[ARG_LIST],,,,,,,,,,,,,,,,,,,,,,,,,
EXP,,,EXP->{EXP_IN},,,,,,,,,,,,,,,,,,,,,,,,,,
EXP_IN,EXP_IN->ASSIGNMENT_FUNCALL,,,,,,EXP_IN->+:[ARG_LIST],EXP_IN->-:[ARG_PAIR],EXP_IN->*:[ARG_LIST],EXP_IN->/:[ARG_PAIR],,EXP_IN-><:[ARG_PAIR],EXP_IN->>:[ARG_PAIR],EXP_IN->==:[ARG_PAIR],EXP_IN->>=:[ARG_PAIR],EXP_IN-><=:[ARG_PAIR],,,,,EXP_IN->and:[ARG_PAIR],EXP_IN->or:[ARG_PAIR],EXP_IN->not:VARVALEXP,,,,,,
ARG_LIST,ARG_LIST-><var> ARG_LIST_END,ARG_LIST-><val> ARG_LIST_END,ARG_LIST->EXP ARG_LIST_END,,,,,,,,,,,,,,,,,,,,,,,,,,
ARG_LIST_END,,,,,,ARG_LIST_END->e,,,,,,,,,,,"ARG_LIST_END->, ARG_LIST",,,,,,,,,,,,
PARAM_LIST,PARAM_LIST-><var> PARAM_LIST_END,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PARAM_LIST_END,,,,,,PARAM_LIST_END->e,,,,,,,,,,,"PARAM_LIST_END->, PARAM_LIST",,,,,,,,,,,,
ARG_PAIR,ARG_PAIR-><var> ARG_PAIR_END,ARG_PAIR-><val> ARG_PAIR_END,ARG_PAIR->EXP ARG_PAIR_END,,,,,,,,,,,,,,,,,,,,,,,,,,
ARG_PAIR_END,,,,,,,,,,,,,,,,,"ARG_PAIR_END->, VARVALEXP",,,,,,,,,,,,
VARVALEXP,VARVALEXP-><var>,VARVALEXP-><val>,VARVALEXP->EXP,,,,,,,,,,,,,,,,,,,,,,,,,,
FUN,,,,,,,,,,,,,,,,,,,,,,,,,"FUN->function <var>:{args:[PARAM_LIST], BODY, return: R}",,,,
R,R-><var>,R-><val>,R->EXP,,,,,,,,,,,,,,,,,,,,,,,,,R->none,
IF,"IF->if:{COND, then:S, else:S}",,,,,,,,,,,,,,,,,,,,,,,,,,,,
COND,COND->VARVALEXP,COND->VARVALEXP,COND->VARVALEXP,,,,,,,,,,,,,,,,,,,,,,,,,,
WHILE,,,,,,,,,,,,,,,,,,,,"WHILE->while:{COND, BODY}",,,,,,,,,